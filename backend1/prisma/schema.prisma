// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id          String  @id @default(uuid())
  username    String  @unique
  password    String
  imagebanner String?
  profession  String?
  description String?
  image       String?

  createdAt DateTime @default(now())
  like      Int      @default(0)
  dislike   Int      @default(0)

  post   post[]
  saving saving[]

  liked                liked[]
  UserSubscription     UserSubscription[]
  articlereadbyuser    articlereadbyuser[]
  summarywatchedbyuser summarywatchedbyuser[]
}

model post {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String?
  content   String?
  nichetype String?
  imageName String?
  videoName String?
  txtName   String?
  like      Int      @default(0)
  dislike   Int      @default(0)
  published Boolean  @default(false)
  belongsid String
  beongsto  user     @relation(fields: [belongsid], references: [id])

  comment              comment[]
  saving               saving[]
  liked                liked[]
  articlereadbyuser    articlereadbyuser[]
  summarywatchedbyuser summarywatchedbyuser[]
}

model comment {
  id            String  @id @default(uuid())
  content       String?
  belongsid     String
  belongstopost post    @relation(fields: [belongsid], references: [id])
}

model saving {
  id             String @id @default(uuid())
  postid         String
  belongstoposts post   @relation(fields: [postid], references: [id])
  belongsid      String
  belongsto      user   @relation(fields: [belongsid], references: [id])
}

model articlereadbyuser {
  id             String @id @default(uuid())
  postid         String
  belongstoposts post   @relation(fields: [postid], references: [id])
  belongsid      String
  belongsto      user   @relation(fields: [belongsid], references: [id])
}

model summarywatchedbyuser {
  id             String @id @default(uuid())
  postid         String
  belongstoposts post   @relation(fields: [postid], references: [id])
  belongsid      String
  belongsto      user   @relation(fields: [belongsid], references: [id])
}

model UserSubscription {
  id           String @id @default(uuid())
  subscribedId String
  subsciberId  String
  belongsto    user   @relation(fields: [subsciberId], references: [id])

  @@unique([subsciberId, subscribedId])
}

model liked {
  id             String @id @default(uuid())
  postid         String
  belongstoposts post   @relation(fields: [postid], references: [id])
  belongsid      String
  belongsto      user   @relation(fields: [belongsid], references: [id])
}
